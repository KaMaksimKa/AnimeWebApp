// <auto-generated />
using System;
using AnimeWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeWebApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220524110347_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeDubbing", b =>
                {
                    b.Property<int>("AnimesAnimeId")
                        .HasColumnType("integer");

                    b.Property<int>("DubbingId")
                        .HasColumnType("integer");

                    b.HasKey("AnimesAnimeId", "DubbingId");

                    b.HasIndex("DubbingId");

                    b.ToTable("AnimeDubbing");
                });

            modelBuilder.Entity("AnimeGenre", b =>
                {
                    b.Property<int>("AnimesAnimeId")
                        .HasColumnType("integer");

                    b.Property<int>("GenresGenreId")
                        .HasColumnType("integer");

                    b.HasKey("AnimesAnimeId", "GenresGenreId");

                    b.HasIndex("GenresGenreId");

                    b.ToTable("AnimeGenre");
                });

            modelBuilder.Entity("AnimeStudio", b =>
                {
                    b.Property<int>("AnimesAnimeId")
                        .HasColumnType("integer");

                    b.Property<int>("StudiosStudioId")
                        .HasColumnType("integer");

                    b.HasKey("AnimesAnimeId", "StudiosStudioId");

                    b.HasIndex("StudiosStudioId");

                    b.ToTable("AnimeStudio");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Anime", b =>
                {
                    b.Property<int>("AnimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimeId"));

                    b.Property<int?>("Completed")
                        .HasColumnType("integer");

                    b.Property<int?>("CountEpisode")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Dropped")
                        .HasColumnType("integer");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<string>("Href")
                        .HasColumnType("text");

                    b.Property<int?>("IdFromAnimeGo")
                        .HasColumnType("integer");

                    b.Property<int?>("MpaaRateId")
                        .HasColumnType("integer");

                    b.Property<string>("NextEpisode")
                        .HasColumnType("text");

                    b.Property<int?>("OnHold")
                        .HasColumnType("integer");

                    b.Property<int?>("Planned")
                        .HasColumnType("integer");

                    b.Property<double?>("Rate")
                        .HasColumnType("double precision");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("TitleEn")
                        .HasColumnType("text");

                    b.Property<string>("TitleRu")
                        .HasColumnType("text");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("Watching")
                        .HasColumnType("integer");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("AnimeId");

                    b.HasIndex("IdFromAnimeGo")
                        .IsUnique();

                    b.HasIndex("MpaaRateId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Dubbing", b =>
                {
                    b.Property<int>("DubbingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DubbingId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DubbingId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Dubbing");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GenreId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("AnimeWebApp.Models.MpaaRate", b =>
                {
                    b.Property<int>("MpaaRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MpaaRateId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MpaaRateId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("MpaaRates");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StatusId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Studio", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudioId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StudioId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("AnimeWebApp.Models.TypeAnime", b =>
                {
                    b.Property<int>("TypeAnimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeAnimeId"));

                    b.Property<string>("FriendlyUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TypeAnimeId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("AnimeDubbing", b =>
                {
                    b.HasOne("AnimeWebApp.Models.Anime", null)
                        .WithMany()
                        .HasForeignKey("AnimesAnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeWebApp.Models.Dubbing", null)
                        .WithMany()
                        .HasForeignKey("DubbingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimeGenre", b =>
                {
                    b.HasOne("AnimeWebApp.Models.Anime", null)
                        .WithMany()
                        .HasForeignKey("AnimesAnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeWebApp.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimeStudio", b =>
                {
                    b.HasOne("AnimeWebApp.Models.Anime", null)
                        .WithMany()
                        .HasForeignKey("AnimesAnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeWebApp.Models.Studio", null)
                        .WithMany()
                        .HasForeignKey("StudiosStudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimeWebApp.Models.Anime", b =>
                {
                    b.HasOne("AnimeWebApp.Models.MpaaRate", "MpaaRate")
                        .WithMany("Animes")
                        .HasForeignKey("MpaaRateId");

                    b.HasOne("AnimeWebApp.Models.Status", "Status")
                        .WithMany("Animes")
                        .HasForeignKey("StatusId");

                    b.HasOne("AnimeWebApp.Models.TypeAnime", "Type")
                        .WithMany("Animes")
                        .HasForeignKey("TypeId");

                    b.Navigation("MpaaRate");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AnimeWebApp.Models.MpaaRate", b =>
                {
                    b.Navigation("Animes");
                });

            modelBuilder.Entity("AnimeWebApp.Models.Status", b =>
                {
                    b.Navigation("Animes");
                });

            modelBuilder.Entity("AnimeWebApp.Models.TypeAnime", b =>
                {
                    b.Navigation("Animes");
                });
#pragma warning restore 612, 618
        }
    }
}
